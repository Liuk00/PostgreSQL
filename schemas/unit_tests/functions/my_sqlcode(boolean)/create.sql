-- Function: unit_tests_public.my_sqlcode(boolean)

-- DROP FUNCTION unit_tests_public.my_sqlcode(boolean);

CREATE OR REPLACE FUNCTION unit_tests_public.my_sqlcode(
    IN _build_dependencies boolean DEFAULT false,
    OUT _results unit_testing.unit_test_result[])
  RETURNS unit_testing.unit_test_result[] AS
$BODY$
<<me>>
DECLARE
  context               text;
  full_function_name 	  text;
  test_name		          text = '';
  error			            diagnostic.error;
BEGIN
  GET DIAGNOSTICS context = PG_CONTEXT;
  full_function_name = diagnostic.full_function_name(context);
  -- check to build dependencies
  IF _build_dependencies THEN
    PERFORM unit_testing.build_function_dependencies(diagnostic.function_name(context));
    RETURN;
  END IF;
  -------------------------------
  test_name = 'CHECK my_sqlcode';
  -------------------------------
  BEGIN
    /*
       use this select to build from scratch:
       select format('    _results = _results || assert.are_equals(full_function_name,''CHECK my_sqlcode: %s'',diagnostic.my_sqlcode(%L,''0''),%L);',function_signature,function_signature,my_sqlcode)
       from diagnostic.functions_list
    */
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.test_full_function_name()',diagnostic.my_sqlcode('diagnostic.test_full_function_name()','0'),'U00P0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.are_equals(text,text,anyarray)',diagnostic.my_sqlcode('assert.are_equals(text,text,anyarray)','0'),'U0000');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.test_function_name()',diagnostic.my_sqlcode('diagnostic.test_function_name()','0'),'U00Q0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.are_not_equals(text,text,anyarray)',diagnostic.my_sqlcode('assert.are_not_equals(text,text,anyarray)','0'),'U0010');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.fail(text,text,text,diagnostic.error)',diagnostic.my_sqlcode('assert.fail(text,text,text,diagnostic.error)','0'),'U0020');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.is_false(text,text,boolean)',diagnostic.my_sqlcode('assert.is_false(text,text,boolean)','0'),'U0030');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.is_greater_than(text,text,anyelement,anyelement)',diagnostic.my_sqlcode('assert.is_greater_than(text,text,anyelement,anyelement)','0'),'U0040');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.is_less_than(text,text,anyelement,anyelement)',diagnostic.my_sqlcode('assert.is_less_than(text,text,anyelement,anyelement)','0'),'U0050');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.is_not_null(text,text,anyelement)',diagnostic.my_sqlcode('assert.is_not_null(text,text,anyelement)','0'),'U0060');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.is_null(text,text,anyelement)',diagnostic.my_sqlcode('assert.is_null(text,text,anyelement)','0'),'U0070');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.is_true(text,text,boolean)',diagnostic.my_sqlcode('assert.is_true(text,text,boolean)','0'),'U0080');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.pass(text,text,text)',diagnostic.my_sqlcode('assert.pass(text,text,text)','0'),'U0090');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.function_exists(regprocedure)',diagnostic.my_sqlcode('diagnostic.function_exists(regprocedure)','0'),'U00F0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.function_name(text)',diagnostic.my_sqlcode('diagnostic.function_name(text)','0'),'U00G0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.function_syntax_error(text,text)',diagnostic.my_sqlcode('diagnostic.function_syntax_error(text,text)','0'),'U00H0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.if_function_compile(text)',diagnostic.my_sqlcode('diagnostic.if_function_compile(text)','0'),'U00J0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.if_view_works(text)',diagnostic.my_sqlcode('diagnostic.if_view_works(text)','0'),'U00K0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.show(diagnostic.error)',diagnostic.my_sqlcode('diagnostic.show(diagnostic.error)','0'),'U00M0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.classroom_students_ex(bigint)',diagnostic.my_sqlcode('public.classroom_students_ex(bigint)','0'),'U02U0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_notes_signed_iu()',diagnostic.my_sqlcode('public.tr_notes_signed_iu()','0'),'U04Z0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.classrooms_students_addresses_ex_by_classroom(bigint)',diagnostic.my_sqlcode('public.classrooms_students_addresses_ex_by_classroom(bigint)','0'),'U02T0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.grades_by_metric(bigint)',diagnostic.my_sqlcode('public.grades_by_metric(bigint)','0'),'U02W0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.lessons_by_teacher_classroom_subject(bigint,bigint,bigint)',diagnostic.my_sqlcode('public.lessons_by_teacher_classroom_subject(bigint,bigint,bigint)','0'),'U0340');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.metrics_by_school(bigint)',diagnostic.my_sqlcode('public.metrics_by_school(bigint)','0'),'U0350');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.rs_rows_list()',diagnostic.my_sqlcode('public.rs_rows_list()','0'),'U03D0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.photo_default()',diagnostic.my_sqlcode('public.photo_default()','0'),'U0390');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.mime_type(file_extension)',diagnostic.my_sqlcode('public.mime_type(file_extension)','0'),'U0360');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.ruoli_by_session_user()',diagnostic.my_sqlcode('public.ruoli_by_session_user()','0'),'U03E0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.qualifications_tree()',diagnostic.my_sqlcode('public.qualifications_tree()','0'),'U03A0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.rs_columns_list()',diagnostic.my_sqlcode('public.rs_columns_list()','0'),'U03C0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.fol()',diagnostic.my_sqlcode('utility.fol()','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.school_years_list(bigint)',diagnostic.my_sqlcode('public.school_years_list(bigint)','0'),'U03W0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_by_description(character varying)',diagnostic.my_sqlcode('public.schools_by_description(character varying)','0'),'U03F0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.system_messages_locale_old(utility.system_message[],integer)',diagnostic.my_sqlcode('utility.system_messages_locale_old(utility.system_message[],integer)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_list()',diagnostic.my_sqlcode('public.schools_list()','0'),'U03M0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_lookup(integer)',diagnostic.my_sqlcode('public.schools_lookup(integer)','0'),'U03P0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_lookup(bigint)',diagnostic.my_sqlcode('public.schools_lookup(bigint)','0'),'U03N0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.count_unit_tests()',diagnostic.my_sqlcode('unit_testing.count_unit_tests()','0'),'U0670');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.session_db_user()',diagnostic.my_sqlcode('public.session_db_user()','0'),'U03X0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.signatures_by_teacher_classroom(bigint,bigint)',diagnostic.my_sqlcode('public.signatures_by_teacher_classroom(bigint,bigint)','0'),'U0400');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.statistics()',diagnostic.my_sqlcode('public.statistics()','0'),'U0410');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.session_person(bigint)',diagnostic.my_sqlcode('public.session_person(bigint)','0'),'U03Y0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.count_unit_tests_level()',diagnostic.my_sqlcode('unit_testing.count_unit_tests_level()','0'),'U0680');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.thumbnail_default()',diagnostic.my_sqlcode('public.thumbnail_default()','0'),'U04A0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.teachers_by_school(bigint)',diagnostic.my_sqlcode('public.teachers_by_school(bigint)','0'),'U0490');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.topics_by_subject_classroom(bigint,bigint)',diagnostic.my_sqlcode('public.topics_by_subject_classroom(bigint,bigint)','0'),'U04B0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_absences_iu()',diagnostic.my_sqlcode('public.tr_absences_iu()','0'),'U04F0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_explanations_iu()',diagnostic.my_sqlcode('public.tr_explanations_iu()','0'),'U04M0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_delays_iu()',diagnostic.my_sqlcode('public.tr_delays_iu()','0'),'U04L0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.system_messages_locale(utility.system_message[],integer)',diagnostic.my_sqlcode('utility.system_messages_locale(utility.system_message[],integer)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_sel(bigint)',diagnostic.my_sqlcode('public.schools_sel(bigint)','0'),'U03Q0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_del_cascade(bigint)',diagnostic.my_sqlcode('public.schools_del_cascade(bigint)','0'),'U03H0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.update_person_photo_and_thumbnail()',diagnostic.my_sqlcode('public.update_person_photo_and_thumbnail()','0'),'U05A0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_valutations_iu()',diagnostic.my_sqlcode('public.tr_valutations_iu()','0'),'U0570');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.valutations_ex_by_classroom_teacher_subject(bigint,bigint,bigint)',diagnostic.my_sqlcode('public.valutations_ex_by_classroom_teacher_subject(bigint,bigint,bigint)','0'),'U05C0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.day_name(utility.week_day)',diagnostic.my_sqlcode('utility.day_name(utility.week_day)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.wikimedia_0_reset()',diagnostic.my_sqlcode('public.wikimedia_0_reset()','0'),'U05Q0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.weekly_timetable_xt_teacher(bigint)',diagnostic.my_sqlcode('public.weekly_timetable_xt_teacher(bigint)','0'),'U05N0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.wikimedia_3_wikimedia_files_popolate_files()',diagnostic.my_sqlcode('public.wikimedia_3_wikimedia_files_popolate_files()','0'),'U05T0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.wikimedia_4_persons_hydration()',diagnostic.my_sqlcode('public.wikimedia_4_persons_hydration()','0'),'U05U0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.wikimedia_5_persons_popolate_files()',diagnostic.my_sqlcode('public.wikimedia_5_persons_popolate_files()','0'),'U05V0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.communication_types(boolean)',diagnostic.my_sqlcode('unit_tests.communication_types(boolean)','0'),'U06Y0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_communications_media_iu()',diagnostic.my_sqlcode('public.tr_communications_media_iu()','0'),'U04J0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.build_function_dependencies(text,text[])',diagnostic.my_sqlcode('unit_testing.build_function_dependencies(text,text[])','0'),'U0660');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.function_versions_synch()',diagnostic.my_sqlcode('unit_testing.function_versions_synch()','0'),'U06A0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.run_ex(boolean,boolean,boolean,bigint,oid,text,text)',diagnostic.my_sqlcode('unit_testing.run_ex(boolean,boolean,boolean,bigint,oid,text,text)','0'),'U06B0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.run_ex(text,boolean,boolean,boolean,bigint,oid,text)',diagnostic.my_sqlcode('unit_testing.run_ex(text,boolean,boolean,boolean,bigint,oid,text)','0'),'U06C0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.export_table(text,text)',diagnostic.my_sqlcode('unit_testing.export_table(text,text)','0'),'U0690');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.set_continuous_integration(boolean)',diagnostic.my_sqlcode('unit_testing.set_continuous_integration(boolean)','0'),'U06E0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.show(unit_testing.check_point)',diagnostic.my_sqlcode('unit_testing.show(unit_testing.check_point)','0'),'U06G0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.classi_abilitate()',diagnostic.my_sqlcode('it.classi_abilitate()','0'),'U0130');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.estensione_file(mime_type)',diagnostic.my_sqlcode('it.estensione_file(mime_type)','0'),'U0180');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.griglia_valutazioni_righe_by_classe_docente_materia(bigint,bigint,bigint)',diagnostic.my_sqlcode('it.griglia_valutazioni_righe_by_classe_docente_materia(bigint,bigint,bigint)','0'),'U01B0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.w_classrooms_ex()',diagnostic.my_sqlcode('public.w_classrooms_ex()','0'),'U05J0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.in_qualsiasi_ruolo(bigint,role[])',diagnostic.my_sqlcode('it.in_qualsiasi_ruolo(bigint,role[])','0'),'U01D0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.in_qualsiasi_ruolo(role[])',diagnostic.my_sqlcode('it.in_qualsiasi_ruolo(role[])','0'),'U01F0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.in_qualsiasi_ruolo(character varying,role[])',diagnostic.my_sqlcode('it.in_qualsiasi_ruolo(character varying,role[])','0'),'U01E0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.codice_fiscale_italiano(character varying,character varying,sex,date,smallint,character varying)',diagnostic.my_sqlcode('it.codice_fiscale_italiano(character varying,character varying,sex,date,smallint,character varying)','0'),'U0140');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.tipo_mime(file_extension)',diagnostic.my_sqlcode('it.tipo_mime(file_extension)','0'),'U0240');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.persone_sel_foto_miniatura(bigint)',diagnostic.my_sqlcode('it.persone_sel_foto_miniatura(bigint)','0'),'U01W0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.personae_cognome_nome(bigint)',diagnostic.my_sqlcode('it.personae_cognome_nome(bigint)','0'),'U01V0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.foto_default()',diagnostic.my_sqlcode('it.foto_default()','0'),'U0190');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.albero_qualifiche()',diagnostic.my_sqlcode('it.albero_qualifiche()','0'),'U00Y0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.istituti_del(bigint,bigint)',diagnostic.my_sqlcode('it.istituti_del(bigint,bigint)','0'),'U01G0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.istituti_del_cascade(bigint)',diagnostic.my_sqlcode('it.istituti_del_cascade(bigint)','0'),'U01H0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.scuole_attive()',diagnostic.my_sqlcode('it.scuole_attive()','0'),'U01X0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.scuole_ins(character varying,character varying,character varying,boolean)',diagnostic.my_sqlcode('it.scuole_ins(character varying,character varying,character varying,boolean)','0'),'U01Y0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.istituti_ins(character varying,character varying,character varying,boolean,bytea)',diagnostic.my_sqlcode('it.istituti_ins(character varying,character varying,character varying,boolean,bytea)','0'),'U01J0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.w_classrooms_teachers_subjects_ex()',diagnostic.my_sqlcode('public.w_classrooms_teachers_subjects_ex()','0'),'U05L0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.consulta_scuole(bigint)',diagnostic.my_sqlcode('it.consulta_scuole(bigint)','0'),'U0150');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.consulta_scuole(integer)',diagnostic.my_sqlcode('it.consulta_scuole(integer)','0'),'U0160');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.istituti_sel(bigint)',diagnostic.my_sqlcode('it.istituti_sel(bigint)','0'),'U01K0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.sel_logo_scuole(bigint)',diagnostic.my_sqlcode('it.sel_logo_scuole(bigint)','0'),'U0200');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.istituti_upd(bigint,bigint,character varying,character varying,character varying,boolean,bytea)',diagnostic.my_sqlcode('it.istituti_upd(bigint,bigint,character varying,character varying,character varying,boolean,bytea)','0'),'U01L0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.scuole_upd(bigint,bigint,character varying,character varying,character varying,boolean)',diagnostic.my_sqlcode('it.scuole_upd(bigint,bigint,character varying,character varying,character varying,boolean)','0'),'U01Z0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.istituti_upd_logo(bigint,bigint,bytea)',diagnostic.my_sqlcode('it.istituti_upd_logo(bigint,bigint,bytea)','0'),'U01M0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.anni_scolastici_abilitati()',diagnostic.my_sqlcode('it.anni_scolastici_abilitati()','0'),'U00Z0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.sessione_utente()',diagnostic.my_sqlcode('it.sessione_utente()','0'),'U0220');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.communications_media(boolean)',diagnostic.my_sqlcode('unit_tests.communications_media(boolean)','0'),'U06W0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.absences(boolean)',diagnostic.my_sqlcode('unit_tests.absences(boolean)','0'),'U06M0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.classrooms(boolean)',diagnostic.my_sqlcode('unit_tests.classrooms(boolean)','0'),'U06S0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.classrooms_students(boolean)',diagnostic.my_sqlcode('unit_tests.classrooms_students(boolean)','0'),'U06T0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.countries(boolean)',diagnostic.my_sqlcode('unit_tests.countries(boolean)','0'),'U0710');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.cities(boolean)',diagnostic.my_sqlcode('unit_tests.cities(boolean)','0'),'U06R0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.sessione_persona(bigint)',diagnostic.my_sqlcode('it.sessione_persona(bigint)','0'),'U0210');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.grades(boolean)',diagnostic.my_sqlcode('unit_tests.grades(boolean)','0'),'U07A0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.imposta_work_space_default(bigint)',diagnostic.my_sqlcode('it.imposta_work_space_default(bigint)','0'),'U01C0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.statistiche()',diagnostic.my_sqlcode('it.statistiche()','0'),'U0230');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.materie_del(bigint,bigint)',diagnostic.my_sqlcode('it.materie_del(bigint,bigint)','0'),'U01N0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.districts(boolean)',diagnostic.my_sqlcode('unit_tests.districts(boolean)','0'),'U0750');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.delays(boolean)',diagnostic.my_sqlcode('unit_tests.delays(boolean)','0'),'U0730');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.faults(boolean)',diagnostic.my_sqlcode('unit_tests.faults(boolean)','0'),'U0780');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.explanations(boolean)',diagnostic.my_sqlcode('unit_tests.explanations(boolean)','0'),'U0760');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.grade_types(boolean)',diagnostic.my_sqlcode('unit_tests.grade_types(boolean)','0'),'U07B0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.grading_meetings_valutations(boolean)',diagnostic.my_sqlcode('unit_tests.grading_meetings_valutations(boolean)','0'),'U07F0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.grading_meetings_valutations_qua(boolean)',diagnostic.my_sqlcode('unit_tests.grading_meetings_valutations_qua(boolean)','0'),'U07G0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.materie_ins(bigint,character varying)',diagnostic.my_sqlcode('it.materie_ins(bigint,character varying)','0'),'U01P0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.notes(boolean)',diagnostic.my_sqlcode('unit_tests.notes(boolean)','0'),'U07T0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.lessons(boolean)',diagnostic.my_sqlcode('unit_tests.lessons(boolean)','0'),'U07M0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.materie_ins(bigint,character varying,bigint)',diagnostic.my_sqlcode('it.materie_ins(bigint,character varying,bigint)','0'),'U01Q0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.materie_sel(bigint)',diagnostic.my_sqlcode('it.materie_sel(bigint)','0'),'U01R0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.metrics(boolean)',diagnostic.my_sqlcode('unit_tests.metrics(boolean)','0'),'U07Q0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.messages(boolean)',diagnostic.my_sqlcode('unit_tests.messages(boolean)','0'),'U07N0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.messages_read(boolean)',diagnostic.my_sqlcode('unit_tests.messages_read(boolean)','0'),'U07P0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.out_of_classrooms(boolean)',diagnostic.my_sqlcode('unit_tests.out_of_classrooms(boolean)','0'),'U07V0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.persons_addresses(boolean)',diagnostic.my_sqlcode('unit_tests.persons_addresses(boolean)','0'),'U07X0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.persons_relations(boolean)',diagnostic.my_sqlcode('unit_tests.persons_relations(boolean)','0'),'U07Z0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.regions(boolean)',diagnostic.my_sqlcode('unit_tests.regions(boolean)','0'),'U0820');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.school_years(boolean)',diagnostic.my_sqlcode('unit_tests.school_years(boolean)','0'),'U0880');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.materie_upd(bigint,bigint,bigint,character varying,bigint)',diagnostic.my_sqlcode('it.materie_upd(bigint,bigint,bigint,character varying,bigint)','0'),'U01S0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.foto_miniatura_demancanza()',diagnostic.my_sqlcode('it.foto_miniatura_demancanza()','0'),'U01A0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.argomenti_del(bigint,bigint)',diagnostic.my_sqlcode('it.argomenti_del(bigint,bigint)','0'),'U0100');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.parents_meetings(boolean)',diagnostic.my_sqlcode('unit_tests.parents_meetings(boolean)','0'),'U07W0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.persons_roles(boolean)',diagnostic.my_sqlcode('unit_tests.persons_roles(boolean)','0'),'U0800');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.argomenti_ins_rid(bigint,character varying,bigint)',diagnostic.my_sqlcode('it.argomenti_ins_rid(bigint,character varying,bigint)','0'),'U0110');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.subjects(boolean)',diagnostic.my_sqlcode('unit_tests.subjects(boolean)','0'),'U0890');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.argomenti_upd_rid(bigint,bigint,character varying)',diagnostic.my_sqlcode('it.argomenti_upd_rid(bigint,bigint,character varying)','0'),'U0120');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.topics(boolean)',diagnostic.my_sqlcode('unit_tests.topics(boolean)','0'),'U08B0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.usenames_ex(boolean)',diagnostic.my_sqlcode('unit_tests.usenames_ex(boolean)','0'),'U08C0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.get_max_column_value(text,text,text)',diagnostic.my_sqlcode('utility.get_max_column_value(text,text,text)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.update_persona_foto_and_foto_miniatura()',diagnostic.my_sqlcode('it.update_persona_foto_and_foto_miniatura()','0'),'U0250');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.valutazioni_del(bigint,bigint)',diagnostic.my_sqlcode('it.valutazioni_del(bigint,bigint)','0'),'U0260');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.valutazioni_ins(bigint,bigint,bigint,bigint,bigint,bigint,character varying,boolean,bigint,date)',diagnostic.my_sqlcode('it.valutazioni_ins(bigint,bigint,bigint,bigint,bigint,bigint,character varying,boolean,bigint,date)','0'),'U0270');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.valutazioni_ins_nota(bigint)',diagnostic.my_sqlcode('it.valutazioni_ins_nota(bigint)','0'),'U0280');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.valutazioni_sel(bigint)',diagnostic.my_sqlcode('it.valutazioni_sel(bigint)','0'),'U0290');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.teachears_notes(boolean)',diagnostic.my_sqlcode('unit_tests.teachears_notes(boolean)','0'),'U08A0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.weekly_timetables(boolean)',diagnostic.my_sqlcode('unit_tests.weekly_timetables(boolean)','0'),'U08E0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.weekly_timetables_days(boolean)',diagnostic.my_sqlcode('unit_tests.weekly_timetables_days(boolean)','0'),'U08F0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.wikimedia_files(boolean)',diagnostic.my_sqlcode('unit_tests.wikimedia_files(boolean)','0'),'U08G0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.wikimedia_files_persons(boolean)',diagnostic.my_sqlcode('unit_tests.wikimedia_files_persons(boolean)','0'),'U08H0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.valutazioni_upd(bigint,bigint,character varying,boolean,boolean)',diagnostic.my_sqlcode('it.valutazioni_upd(bigint,bigint,character varying,boolean,boolean)','0'),'U02A0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.entity2char(text)',diagnostic.my_sqlcode('utility.entity2char(text)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.entity_coding()',diagnostic.my_sqlcode('utility.entity_coding()','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.enum2array(anyenum)',diagnostic.my_sqlcode('utility.enum2array(anyenum)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.valutazioni_upd_voto(bigint,bigint,bigint)',diagnostic.my_sqlcode('it.valutazioni_upd_voto(bigint,bigint,bigint)','0'),'U02B0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.w_classi_ex()',diagnostic.my_sqlcode('it.w_classi_ex()','0'),'U02E0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.w_classi_alunni_ex()',diagnostic.my_sqlcode('it.w_classi_alunni_ex()','0'),'U02C0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.set_all_sequences_2_the_max()',diagnostic.my_sqlcode('utility.set_all_sequences_2_the_max()','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.set_sequence_2_the_max(text,text)',diagnostic.my_sqlcode('utility.set_sequence_2_the_max(text,text)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.strip_tags(text)',diagnostic.my_sqlcode('utility.strip_tags(text)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.w_classi_docenti_materie_ex()',diagnostic.my_sqlcode('it.w_classi_docenti_materie_ex()','0'),'U02D0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.url_decode(text)',diagnostic.my_sqlcode('utility.url_decode(text)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.where_sequence(text,text,text,bigint)',diagnostic.my_sqlcode('utility.where_sequence(text,text,text,bigint)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.tr_usenames_ex_iu()',diagnostic.my_sqlcode('utility.tr_usenames_ex_iu()','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.orario_settimanale_xt_materia(bigint)',diagnostic.my_sqlcode('it.orario_settimanale_xt_materia(bigint)','0'),'U01U0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.orario_settimanale_xt_docente(bigint)',diagnostic.my_sqlcode('it.orario_settimanale_xt_docente(bigint)','0'),'U01T0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.dove_sequenza(text,bigint)',diagnostic.my_sqlcode('it.dove_sequenza(text,bigint)','0'),'U0170');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.wikimedia_0_resetta()',diagnostic.my_sqlcode('it.wikimedia_0_resetta()','0'),'U02F0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.wikimedia_1_ricrea_files_persone_wikimedia()',diagnostic.my_sqlcode('it.wikimedia_1_ricrea_files_persone_wikimedia()','0'),'U02G0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.wikimedia_2_idratazione_files_wikimedia(integer)',diagnostic.my_sqlcode('it.wikimedia_2_idratazione_files_wikimedia(integer)','0'),'U02H0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.wikimedia_3_popolazione_files_wikimedia()',diagnostic.my_sqlcode('it.wikimedia_3_popolazione_files_wikimedia()','0'),'U02J0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.wikimedia_4_idratazione_persone()',diagnostic.my_sqlcode('it.wikimedia_4_idratazione_persone()','0'),'U02K0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.wikimedia_5_popolazione_persone_files()',diagnostic.my_sqlcode('it.wikimedia_5_popolazione_persone_files()','0'),'U02L0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.w_orario_settimanale_ex()',diagnostic.my_sqlcode('it.w_orario_settimanale_ex()','0'),'U02M0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: it.w_orari_settimanali_giorni_ex()',diagnostic.my_sqlcode('it.w_orari_settimanali_giorni_ex()','0'),'U02N0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_faults_iu()',diagnostic.my_sqlcode('public.tr_faults_iu()','0'),'U04N0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.school_years_enabled()',diagnostic.my_sqlcode('public.school_years_enabled()','0'),'U03V0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.persons(boolean)',diagnostic.my_sqlcode('unit_tests.persons(boolean)','0'),'U07Y0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests._after_data_insert(boolean)',diagnostic.my_sqlcode('unit_tests._after_data_insert(boolean)','0'),'U06P0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_leavings_iu()',diagnostic.my_sqlcode('public.tr_leavings_iu()','0'),'U04U0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.explanations_triggers(boolean)',diagnostic.my_sqlcode('unit_tests.explanations_triggers(boolean)','0'),'U0770');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.classrooms_enabled()',diagnostic.my_sqlcode('public.classrooms_enabled()','0'),'U02R0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.show(text[])',diagnostic.my_sqlcode('diagnostic.show(text[])','0'),'U00N0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: translate.translation()',diagnostic.my_sqlcode('translate.translation()','0'),'U0640');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.leavings_triggers(boolean)',diagnostic.my_sqlcode('unit_tests.leavings_triggers(boolean)','0'),'U07L0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.schools_behavior(boolean)',diagnostic.my_sqlcode('unit_tests.schools_behavior(boolean)','0'),'U0830');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.schools_foreign_key(boolean)',diagnostic.my_sqlcode('unit_tests.schools_foreign_key(boolean)','0'),'U0860');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.valutations_ins_note(bigint)',diagnostic.my_sqlcode('public.valutations_ins_note(bigint)','0'),'U05E0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.valutations_ins(bigint,bigint,bigint,bigint,bigint,bigint,character varying,boolean,bigint,date)',diagnostic.my_sqlcode('public.valutations_ins(bigint,bigint,bigint,bigint,bigint,bigint,character varying,boolean,bigint,date)','0'),'U05D0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.schools_check(boolean)',diagnostic.my_sqlcode('unit_tests.schools_check(boolean)','0'),'U0850');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.w_weekly_timetables_days_ex()',diagnostic.my_sqlcode('public.w_weekly_timetables_days_ex()','0'),'U05X0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.w_classrooms_students_ex()',diagnostic.my_sqlcode('public.w_classrooms_students_ex()','0'),'U05K0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.w_weekly_timetable_ex()',diagnostic.my_sqlcode('public.w_weekly_timetable_ex()','0'),'U05W0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.full_function_name(text)',diagnostic.my_sqlcode('diagnostic.full_function_name(text)','0'),'U00E0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.count_value(text,text,text)',diagnostic.my_sqlcode('utility.count_value(text,text,text)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.schools(boolean)',diagnostic.my_sqlcode('unit_tests.schools(boolean)','0'),'U0840');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.wikimedia_2_wikimedia_files_hydration(integer)',diagnostic.my_sqlcode('public.wikimedia_2_wikimedia_files_hydration(integer)','0'),'U05S0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.notes_signed(boolean)',diagnostic.my_sqlcode('unit_tests.notes_signed(boolean)','0'),'U07U0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.valutations(boolean)',diagnostic.my_sqlcode('unit_tests.valutations(boolean)','0'),'U08D0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.faults_triggers(boolean)',diagnostic.my_sqlcode('unit_tests.faults_triggers(boolean)','0'),'U0790');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.branches(boolean)',diagnostic.my_sqlcode('unit_tests.branches(boolean)','0'),'U06Q0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_grading_meetings_valutations_iu()',diagnostic.my_sqlcode('public.tr_grading_meetings_valutations_iu()','0'),'U04R0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.classrooms_trigger(boolean)',diagnostic.my_sqlcode('unit_tests.classrooms_trigger(boolean)','0'),'U06V0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.conversations_invites(boolean)',diagnostic.my_sqlcode('unit_tests.conversations_invites(boolean)','0'),'U0700');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.degrees(boolean)',diagnostic.my_sqlcode('unit_tests.degrees(boolean)','0'),'U0720');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_out_of_classrooms_iu()',diagnostic.my_sqlcode('public.tr_out_of_classrooms_iu()','0'),'U0500');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.tr_continuous_integration()',diagnostic.my_sqlcode('unit_testing.tr_continuous_integration()','0'),'U06H0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.my_sqlcode(character varying,character)',diagnostic.my_sqlcode('diagnostic.my_sqlcode(character varying,character)','0'),'U00L0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_parents_meetings_iu()',diagnostic.my_sqlcode('public.tr_parents_meetings_iu()','0'),'U0510');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.delays_triggers(boolean)',diagnostic.my_sqlcode('unit_tests.delays_triggers(boolean)','0'),'U0740');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_notes_iu()',diagnostic.my_sqlcode('public.tr_notes_iu()','0'),'U04Y0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.grading_meetings_valutations_triggers(boolean)',diagnostic.my_sqlcode('unit_tests.grading_meetings_valutations_triggers(boolean)','0'),'U07H0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.holidays(boolean)',diagnostic.my_sqlcode('unit_tests.holidays(boolean)','0'),'U07J0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_topics_iu()',diagnostic.my_sqlcode('public.tr_topics_iu()','0'),'U0550');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.mime_type(boolean)',diagnostic.my_sqlcode('unit_tests.mime_type(boolean)','0'),'U07R0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_valutations_qualifications_iu()',diagnostic.my_sqlcode('public.tr_valutations_qualifications_iu()','0'),'U0580');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.my_sqlcode(boolean)',diagnostic.my_sqlcode('unit_tests.my_sqlcode(boolean)','0'),'U07S0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_weekly_timetables_days_iu()',diagnostic.my_sqlcode('public.tr_weekly_timetables_days_iu()','0'),'U0590');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_classrooms_students_iu()',diagnostic.my_sqlcode('public.tr_classrooms_students_iu()','0'),'U04H0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.tr_dependencies_iu()',diagnostic.my_sqlcode('unit_testing.tr_dependencies_iu()','0'),'U06J0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_messages_read_iu()',diagnostic.my_sqlcode('public.tr_messages_read_iu()','0'),'U04X0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.tr_function_versions_iu()',diagnostic.my_sqlcode('unit_testing.tr_function_versions_iu()','0'),'U06K0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.tr_unit_test_sets_details_iu()',diagnostic.my_sqlcode('unit_testing.tr_unit_test_sets_details_iu()','0'),'U06L0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_conversations_invites_iu()',diagnostic.my_sqlcode('public.tr_conversations_invites_iu()','0'),'U04K0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_usename_iu()',diagnostic.my_sqlcode('public.tr_usename_iu()','0'),'U0560');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: translate.synch()',diagnostic.my_sqlcode('translate.synch()','0'),'U0630');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_grading_meetings_valutations_d()',diagnostic.my_sqlcode('public.tr_grading_meetings_valutations_d()','0'),'U04Q0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.grading_meetings_triggers(boolean)',diagnostic.my_sqlcode('unit_tests.grading_meetings_triggers(boolean)','0'),'U07E0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.topics_del(bigint,bigint)',diagnostic.my_sqlcode('public.topics_del(bigint,bigint)','0'),'U04C0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.grid_valutations_columns_by_classroom_teacher_subject(bigint,bigint,bigint)',diagnostic.my_sqlcode('public.grid_valutations_columns_by_classroom_teacher_subject(bigint,bigint,bigint)','0'),'U02Y0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.relatives_by_classroom(bigint)',diagnostic.my_sqlcode('public.relatives_by_classroom(bigint)','0'),'U03B0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.grid_valutations_rows_by_classroom_teacher_subject(bigint,bigint,bigint)',diagnostic.my_sqlcode('public.grid_valutations_rows_by_classroom_teacher_subject(bigint,bigint,bigint)','0'),'U02Z0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_upd(bigint,bigint,character varying,character varying,character varying,boolean,bytea)',diagnostic.my_sqlcode('public.schools_upd(bigint,bigint,character varying,character varying,character varying,boolean,bytea)','0'),'U03T0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.set_work_space_default(bigint)',diagnostic.my_sqlcode('public.set_work_space_default(bigint)','0'),'U03Z0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.classrooms_students_trigger(boolean)',diagnostic.my_sqlcode('unit_tests.classrooms_students_trigger(boolean)','0'),'U06U0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.valutations_del(bigint,bigint)',diagnostic.my_sqlcode('public.valutations_del(bigint,bigint)','0'),'U05B0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.valutations_upd_grade(bigint,bigint,bigint)',diagnostic.my_sqlcode('public.valutations_upd_grade(bigint,bigint,bigint)','0'),'U05H0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.italian_fiscal_code(character varying,character varying,sex,date,smallint,character varying)',diagnostic.my_sqlcode('public.italian_fiscal_code(character varying,character varying,sex,date,smallint,character varying)','0'),'U0330');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_grading_meetings_valutations_qua_d()',diagnostic.my_sqlcode('public.tr_grading_meetings_valutations_qua_d()','0'),'U04S0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.file_extension(mime_type)',diagnostic.my_sqlcode('public.file_extension(mime_type)','0'),'U02V0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_signatures_iu()',diagnostic.my_sqlcode('public.tr_signatures_iu()','0'),'U0530');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.classrooms_list(bigint)',diagnostic.my_sqlcode('public.classrooms_list(bigint)','0'),'U02S0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_del(bigint,bigint)',diagnostic.my_sqlcode('public.schools_del(bigint,bigint)','0'),'U03G0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.grade_types_by_subject(bigint)',diagnostic.my_sqlcode('public.grade_types_by_subject(bigint)','0'),'U02X0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.students_by_classroom(bigint)',diagnostic.my_sqlcode('public.students_by_classroom(bigint)','0'),'U0420');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.persons_sel_thumbnail(bigint)',diagnostic.my_sqlcode('public.persons_sel_thumbnail(bigint)','0'),'U0370');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.persons_surname_name(bigint)',diagnostic.my_sqlcode('public.persons_surname_name(bigint)','0'),'U0380');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_enabled()',diagnostic.my_sqlcode('public.schools_enabled()','0'),'U03J0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_ins(character varying,character varying,character varying,boolean)',diagnostic.my_sqlcode('public.schools_ins(character varying,character varying,character varying,boolean)','0'),'U03K0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.grading_meetings(boolean)',diagnostic.my_sqlcode('unit_tests.grading_meetings(boolean)','0'),'U07C0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.weekly_timetable_xt_subject(bigint)',diagnostic.my_sqlcode('public.weekly_timetable_xt_subject(bigint)','0'),'U05M0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_ins(character varying,character varying,character varying,boolean,bytea)',diagnostic.my_sqlcode('public.schools_ins(character varying,character varying,character varying,boolean,bytea)','0'),'U03L0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_sel_logo(bigint)',diagnostic.my_sqlcode('public.schools_sel_logo(bigint)','0'),'U03R0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_upd(bigint,bigint,character varying,character varying,character varying,boolean)',diagnostic.my_sqlcode('public.schools_upd(bigint,bigint,character varying,character varying,character varying,boolean)','0'),'U03S0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.schools_upd_logo(bigint,bigint,bytea)',diagnostic.my_sqlcode('public.schools_upd_logo(bigint,bigint,bytea)','0'),'U03U0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.subjects_del(bigint,bigint)',diagnostic.my_sqlcode('public.subjects_del(bigint,bigint)','0'),'U0430');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.subjects_ins(bigint,character varying)',diagnostic.my_sqlcode('public.subjects_ins(bigint,character varying)','0'),'U0440');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.subjects_ins(bigint,character varying,bigint)',diagnostic.my_sqlcode('public.subjects_ins(bigint,character varying,bigint)','0'),'U0450');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.subjects_list(bigint)',diagnostic.my_sqlcode('public.subjects_list(bigint)','0'),'U0460');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.subjects_sel(bigint)',diagnostic.my_sqlcode('public.subjects_sel(bigint)','0'),'U0470');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.subjects_upd(bigint,bigint,bigint,character varying,bigint)',diagnostic.my_sqlcode('public.subjects_upd(bigint,bigint,bigint,character varying,bigint)','0'),'U0480');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.topics_ins_rid(bigint,character varying,bigint)',diagnostic.my_sqlcode('public.topics_ins_rid(bigint,character varying,bigint)','0'),'U04D0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.topics_upd_rid(bigint,bigint,character varying)',diagnostic.my_sqlcode('public.topics_upd_rid(bigint,bigint,character varying)','0'),'U04E0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.valutations_sel(bigint)',diagnostic.my_sqlcode('public.valutations_sel(bigint)','0'),'U05F0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.where_sequence(text,bigint)',diagnostic.my_sqlcode('public.where_sequence(text,bigint)','0'),'U05P0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.wikimedia_1_recreate_wikimedia_files_persons()',diagnostic.my_sqlcode('public.wikimedia_1_recreate_wikimedia_files_persons()','0'),'U05R0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.valutations_upd(bigint,bigint,character varying,boolean,boolean)',diagnostic.my_sqlcode('public.valutations_upd(bigint,bigint,character varying,boolean,boolean)','0'),'U05G0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.run(text,boolean,boolean,boolean,bigint,oid,text)',diagnostic.my_sqlcode('unit_testing.run(text,boolean,boolean,boolean,bigint,oid,text)','0'),'U06D0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_testing.show_test_errors(bigint)',diagnostic.my_sqlcode('unit_testing.show_test_errors(bigint)','0'),'U06F0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.conversations(boolean)',diagnostic.my_sqlcode('unit_tests.conversations(boolean)','0'),'U06Z0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.qualifications(boolean)',diagnostic.my_sqlcode('unit_tests.qualifications(boolean)','0'),'U0810');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.number_base34(bigint)',diagnostic.my_sqlcode('utility.number_base34(bigint)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.number_base34_pl(utility.number_base34,integer)',diagnostic.my_sqlcode('utility.number_base34_pl(utility.number_base34,integer)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.int8(utility.number_base34)',diagnostic.my_sqlcode('utility.int8(utility.number_base34)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: utility.grant_all2(text)',diagnostic.my_sqlcode('utility.grant_all2(text)','0'),'UZZZ0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: diagnostic.build_my_sqlcode()',diagnostic.my_sqlcode('diagnostic.build_my_sqlcode()','0'),'U00D0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.schools_trigger(boolean)',diagnostic.my_sqlcode('unit_tests.schools_trigger(boolean)','0'),'U0870');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.communications_media_trigger(boolean)',diagnostic.my_sqlcode('unit_tests.communications_media_trigger(boolean)','0'),'U06X0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: assert.sqlstate_equals(text,text,diagnostic.error,text[])',diagnostic.my_sqlcode('assert.sqlstate_equals(text,text,diagnostic.error,text[])','0'),'U00A0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_classrooms_iu()',diagnostic.my_sqlcode('public.tr_classrooms_iu()','0'),'U04G0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.absences_trigger(boolean)',diagnostic.my_sqlcode('unit_tests.absences_trigger(boolean)','0'),'U06N0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_grading_meetings_iu()',diagnostic.my_sqlcode('public.tr_grading_meetings_iu()','0'),'U04P0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_schools_iu()',diagnostic.my_sqlcode('public.tr_schools_iu()','0'),'U0520');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.leavings(boolean)',diagnostic.my_sqlcode('unit_tests.leavings(boolean)','0'),'U07K0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_teachears_notes_iu()',diagnostic.my_sqlcode('public.tr_teachears_notes_iu()','0'),'U0540');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.in_any_roles(role[])',diagnostic.my_sqlcode('public.in_any_roles(role[])','0'),'U0320');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.in_any_roles(bigint,role[])',diagnostic.my_sqlcode('public.in_any_roles(bigint,role[])','0'),'U0300');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.in_any_roles(character varying,role[])',diagnostic.my_sqlcode('public.in_any_roles(character varying,role[])','0'),'U0310');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_lessons_iu()',diagnostic.my_sqlcode('public.tr_lessons_iu()','0'),'U04V0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: unit_tests.grading_meetings_close(boolean)',diagnostic.my_sqlcode('unit_tests.grading_meetings_close(boolean)','0'),'U07D0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_grading_meetings_valutations_qua_iu()',diagnostic.my_sqlcode('public.tr_grading_meetings_valutations_qua_iu()','0'),'U04T0');
    _results = _results || assert.are_equals(full_function_name,'CHECK my_sqlcode: public.tr_messages_iu()',diagnostic.my_sqlcode('public.tr_messages_iu()','0'),'U04W0');

    EXCEPTION
      WHEN OTHERS THEN
        GET STACKED DIAGNOSTICS error.returned_sqlstate = RETURNED_SQLSTATE, error.message_text = MESSAGE_TEXT, error.schema_name = SCHEMA_NAME, error.table_name = TABLE_NAME, error.column_name = COLUMN_NAME, error.constraint_name = CONSTRAINT_NAME, error.pg_exception_context = PG_EXCEPTION_CONTEXT, error.pg_exception_detail = PG_EXCEPTION_DETAIL, error.pg_exception_hint = PG_EXCEPTION_HINT, error.pg_datatype_name = PG_DATATYPE_NAME;
        _results = _results || assert.fail(full_function_name, test_name, 'CHECK my_sqlcode FAILED', error);
        RETURN;
  END;
RETURN;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION unit_tests_public.my_sqlcode(boolean)
  OWNER TO postgres;
